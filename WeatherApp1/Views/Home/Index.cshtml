@model IEnumerable<WeatherApp1.Models.WeatherForecast>
@using Microsoft.AspNetCore.Identity
@using WeatherApp1.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Прогноза за времето";

    int forecastDaysToShow = 3;
    if (User.Identity.IsAuthenticated && !User.IsInRole("Admin"))
    {
        forecastDaysToShow = 7; // Registered users see 7 days ahead
    }

    var forecastsToShow = User.IsInRole("Admin") ? Model : Model.Take(forecastDaysToShow);

    // Function to determine class based on weather description
    string GetWeatherClass(string description)
    {
        return description switch
        {
            "предимно слънчево" => "sunny",  
            "слънчево" => "sunny",  
            "предимно облачно" => "cloudy", 
            "облачно" => "cloudy",  
            "предимно слънчево кратък дъжд" => "sunnyRainy",  
            "предимно слънчево кратък сняг" => "sunnySnowy", 
            "предимно облачно сняг" => "cloudySnowy",
            "предимно облачно кратък сняг" => "cloudySnowy",
            "предимно облачно дъжд" => "cloudyRainy",
            "предимно облачно кратък дъжд" => "cloudyRainy",
            "облачно сняг" => "cloudySnowy",
            "облачно дъжд" => "cloudyRainy",
            "облачно кратък дъжд" => "cloudyRainy",
            "облачно кратък сняг" => "cloudySnowy",
            _ => "bg-gray-200 text-black"  
        };
    }
    // Function to determine moon phase image
    string GetMoonPhaseImage(string moonPhase)
    {
        return moonPhase switch
        {
            "пълнолуние" => "https://cdn.britannica.com/96/208796-050-47869FC7/full-moon.jpg",
            "първа четвърт" => "https://pbs.twimg.com/media/FFUOdsCXoAMPyn2.png",
            "трета четвърт" => "https://images.rawpixel.com/image_800/cHJpdmF0ZS9sci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTEyL3Vwd2s3OTIxNjMyMi13aWtpbWVkaWEtaW1hZ2Utam9iMTQ0OS1sYmcxcnRjaS5qcGc.jpg",
            "намаляваща луна" => "https://earthsky.org/upl/2023/02/Waning-gibbous-Feb-10-2023-Jerermy-Likness-e1677002332927.jpg",
            "растяща луна" => "https://c.tadst.com/gfx/1200x630/waxing-gibbous-moon.jpg?1",
            "залязващ полумесец" => "https://images.fineartamerica.com/images-medium-large-5/waning-crescent-moon-nasagsfc-svsscience-photo-library.jpg",
            "изгряващ полумесец" => "https://images.fineartamerica.com/images-medium-large-5/waxing-crescent-moon-nasagsfc-svsscience-photo-library.jpg",
            "новолуние" => "https://c.tadst.com/gfx/600x337/total-solar-elipse-diamondring.jpg?1",
            _ => "https://cdn.britannica.com/96/208796-050-47869FC7/full-moon.jpg" // Default to full moon if unknown
        };
    }
}

<h1 class="text-center mb-4">Прогноза за времето</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-controller="WeatherForecasts" asp-action="Create" class="btn btn-primary">Създай нова прогноза</a>
    </p>
}

@if (User.Identity.IsAuthenticated)
{
    <p>
        <button id="prevBtn" class="nav-btn left-btn" onclick="prevSlide()">&#10094;</button>
    </p>
}

<div class="weather-container">
    <div class="weather-slider">
        @foreach (var item in forecastsToShow)
        {
            <div class="weather-card-container">
                <div class="card weather-card @GetWeatherClass(item.WeatherDescription)">
                    <div class="card-body">
                        @if (User.IsInRole("Admin"))
                        {
                            <div class="settings-icon" onclick="toggleSettingsMenu(this)">
                                ⚙️
                                <div class="settings-menu">
                                    <a class="btn btn-warning btn-sm" asp-controller="WeatherForecasts" asp-action="Edit" asp-route-id="@item.Id">Редактирай</a>
                                    <a class="btn btn-info btn-sm" asp-controller="WeatherForecasts" asp-action="Details" asp-route-id="@item.Id">Детайли</a>
                                    <a class="btn btn-danger btn-sm" asp-controller="WeatherForecasts" asp-action="Delete" asp-route-id="@item.Id">Изтрий</a>
                                </div>
                            </div>
                        }
                        <h5 class="card-title text-center"><strong>@Html.DisplayFor(modelItem => item.DayOfWeek)</strong></h5>
                            <p class="text-center text-white">@Html.DisplayFor(modelItem => item.WeatherDescription)</p>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">🌡️ <strong>Макс. температура:</strong> @Html.DisplayFor(modelItem => item.MaxTemperature)°C</li>
                                <li class="list-group-item">🌡️ <strong>Мин. температура:</strong> @Html.DisplayFor(modelItem => item.MinTemperature)°C</li>
                                <li class="list-group-item">💨 <strong>Скорост на вятъра:</strong> @Html.DisplayFor(modelItem => item.WindSpeed) км/ч</li>
                                <li class="list-group-item">🧭 <strong>Посока на вятъра:</strong> @Html.DisplayFor(modelItem => item.WindDirection)</li>
                                <li class="list-group-item">🌧️ <strong>Вероятност за дъжд:</strong> @Html.DisplayFor(modelItem => item.RainProbability)%</li>
                                <li class="list-group-item">🌅 <strong>Изгрев:</strong> @Html.DisplayFor(modelItem => item.Sunrise)</li>
                                <li class="list-group-item">🌇 <strong>Залез:</strong> @Html.DisplayFor(modelItem => item.Sunset)</li>
                                <li class="list-group-item">
                                    🌙 <strong>Фаза на луната:</strong>
                                    <div class="moon-phase-container">
                                        <img src="@GetMoonPhaseImage(item.MoonPhase)"
                                             alt="@item.MoonPhase"
                                             class="moon-phase-img"
                                             onmouseover="showTooltip(this, '@item.MoonPhase')"
                                             onmouseout="hideTooltip(this)" />

                                        <div class="moon-tooltip">@item.MoonPhase</div>

                                    </div>
                                </li>
                            </ul>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    <p>
        <button id="nextBtn" class="nav-btn right-btn" onclick="nextSlide()">&#10095;</button>
    </p>
}

@section Scripts {
    <script>
        let index = 0;
        const cardWidth = document.querySelector('.weather-card-container').offsetWidth + 20; // Include margin
        const slider = document.querySelector('.weather-slider');
        const totalCards = document.querySelectorAll('.weather-card-container').length;
        const visibleCards = 3;

        function nextSlide() {
            if (index < totalCards - visibleCards) {
                index++;
                updateSlider();
            }
        }

        function prevSlide() {
            if (index > 0) {
                index--;
                updateSlider();
            }
        }

        function updateSlider() {
            slider.style.transform = `translateX(-${index * cardWidth}px)`;
            updateNavButtons(); // Check visibility of buttons
        }

        function updateNavButtons() {
            // Show/hide buttons based on the current index
            document.getElementById("prevBtn").style.display = (index > 0) ? "block" : "none";
            document.getElementById("nextBtn").style.display = (index < totalCards - visibleCards) ? "block" : "none";
        }

        // Initial check to hide the "Back" button if needed
        document.addEventListener("DOMContentLoaded", updateNavButtons);

        // ============================
        // Settings Menu Functionality
        // ============================
        function toggleSettingsMenu(element) {
            // Close any open menus first
            document.querySelectorAll(".settings-menu").forEach(menu => {
                if (menu !== element.querySelector(".settings-menu")) {
                    menu.classList.remove("active");
                }
            });

            // Toggle the clicked menu
            let menu = element.querySelector(".settings-menu");
            menu.classList.toggle("active");
        }

        // Close the settings menu when clicking outside
        document.addEventListener("click", function (event) {
            let isClickInside = event.target.closest(".settings-icon");

            if (!isClickInside) {
                document.querySelectorAll(".settings-menu").forEach(menu => {
                    menu.classList.remove("active");
                });
            }
        });

        function showTooltip(element, text) {
            let tooltip = element.nextElementSibling;
            tooltip.textContent = text;
            tooltip.style.visibility = "visible";
            tooltip.style.opacity = "1";
        }

        function hideTooltip(element) {
            let tooltip = element.nextElementSibling;
            tooltip.style.visibility = "hidden";
            tooltip.style.opacity = "0";
        }
    </script>
}
